@using Models

@model Models.Product

@{
	string title = "ویرایش محصول";
	ViewBag.Title = title;
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>
	@title
</h2>

<div class="row">
	@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.HiddenFor(current => current.ProductId)
		@Html.HiddenFor(current => current.ImageName)
		@Html.HiddenFor(current => current.CreateDate)

		<div class="col-md-8">
			@Html.AntiForgeryToken()
			@if (ViewBag.ErrorMessageSelectedGroups == true)
			{
				<div class="alert alert-danger">
					لطفا گروه محصول را انتخاب کنید
				</div>
			}
			<div class="form-horizontal">
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })

				<div class="form-group">
					@Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<span class="control-label col-md-2">
						کلمات کلیدی
					</span>
					<div class="col-md-10">
						<input class="form-control" type="text" name="tags" value="@ViewBag.Tags" placeholder="کلمات کلیدی را با , جدا کنید" />
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="ویرایش محصول" class="btn btn-primary" />
					</div>
				</div>
			</div>
		</div>

		<div class="col-md-4">
			<div class="panel panel-primary">
				<div class="panel-heading">
					تصویر محصول
				</div>
				<div class="panel-body">
					@*search: Image Preview before upload jquery*@
					<img class="thumbnail" id="imagePreviewProduct" style="margin:8px auto" src="~/Images/ProductImages/@Model.ImageName" />
					<div class="form-group">
						@Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<input type="file" id="imageProduct" name="imageProduct" />
							@Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
			</div>

			<div class="panel panel-primary">
				<div class="panel-heading">
					انتخاب گروه
				</div>
				<div class="panel-body">
					@{
						IList<ProductGroup> productGroups = ViewBag.Groups;

						IList<ProductSelectedGroup> selectedGroups = ViewBag.SelectedGroup;

						<ul>
							@foreach (var item in productGroups)
							{
								if (item.ParentId == null)
								{
									<li style="list-style-type:none">
										<input type="checkbox" @((selectedGroups.Any(current => current.GroupId == item.GroupId)) ? "checked" : "") name="selectedGroups" value="@item.GroupId" /> <span>@item.GroupTitle</span>
										@if (productGroups.Any(current => current.ParentId == item.GroupId))
										{
											<ul>
												@foreach (var subGroups in productGroups.Where(current => current.ParentId == item.GroupId))
												{
													<li style="list-style-type:none">
														<input type="checkbox" @((selectedGroups.Any(current => current.GroupId == subGroups.GroupId)) ? "checked" : "") name="selectedGroups" value="@subGroups.GroupId" /> <span>@subGroups.GroupTitle</span>
													</li>
												}
											</ul>
										}
									</li>
								}
							}
						</ul>
					}
				</div>
			</div>
		</div>
	}
</div>
<div>
	@Html.ActionLink("بازگشت به لیست محصولات", "Index")
</div>

@section Script {
	<script>
		function readURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();

				reader.onload = function (e) {
					$('#imagePreviewProduct').attr('src', e.target.result);
				}

				reader.readAsDataURL(input.files[0]); // convert to base64 string
			}
		}

		$("#imageProduct").change(function () {
			readURL(this);
		});
	</script>

	@*Microsoft.AspNet.Mvc => Install With Nuget*@
	<script src="/ckeditor/ckeditor.js"></script>
	<script src="/ckeditor/adapters/jquery.js"></script>

	<script>
		$(function () {
			$('#Text').ckeditor();
		});
	</script>
}
